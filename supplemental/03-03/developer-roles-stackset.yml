AWSTemplateFormatVersion: "2010-09-09"
Description: Creates the basic IAM unfederated user pattern with MFA requirements and sessionname required.
Resources: 
  DeveloperPermissionsBoundary:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Permissions boundary for developers.
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ServiceBoundaries
            Effect: Allow
            Action:
              - s3:*
              - cloudwatch:*
              - ec2:*
              - dynamodb:*
            Resource: "*"
          - Sid: AllowIAMConsoleForCredentials
            Effect: Allow
            Action:
              - iam:ListUsers
              - iam:GetAccountPasswordPolicy
              - iam:ListPolicies
              - iam:ListRoles
              - iam:DeleteRolePolicy
              - iam:PutRolePermissionsBoundary
              - iam:PutUserPermissionsBoundary
              - iam:PutUserPolicy
              - iam:DeleteUserPolicy
              - iam:AttachUserPolicy
              - iam:CreateRole
              - iam:AttachRolePolicy
              - iam:PutRolePolicy
              - iam:DetachUserPolicy
              - iam:CreateUser
              - iam:CreateInstanceProfile
              - iam:AddRoleToInstanceProfile
              - iam:PassRole
            Resource: "*"
          - Sid: AllowAssumeRole
            Effect: Allow
            Action:
              - sts:AssumeRole
            Resource: "*"
          - Sid: AllowManageOwnPasswordAndAccessKeys
            Effect: Allow
            Action:
              - iam:*AccessKey*
              - iam:ChangePassword
              - iam:GetUser
              - iam:*ServiceSpecificCredential*
              - iam:*SigningCertificate*
            Resource:
              - arn:aws:iam::*:user/${aws:username}
          - Sid: DenyS3Logs
            Effect: Deny
            Action: s3:*
            Resource:
              - arn:aws:s3:::logs
              - arn:aws:s3:::logs/*
  DeveloperRoleCustomPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy for administering EC2 instances.
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 'ec2:*'
            Resource: '*'
            Condition:
              StringEquals:
                'aws:ResourceTag/application': bluejays
  DeveloperRoleCustomPolicy2:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy for administering IAM Roles that must include a boundary.
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
            - iam:DeleteRolePolicy
            - iam:PutRolePermissionsBoundary
            - iam:PutUserPermissionsBoundary
            - iam:PutUserPolicy
            - iam:DeleteUserPolicy
            - iam:AttachUserPolicy
            - iam:CreateRole
            - iam:AttachRolePolicy
            - iam:PutRolePolicy
            - iam:DetachUserPolicy
            - iam:CreateUser
            Resource: "*"
            Condition:
              StringEquals:
                iam:PermissionsBoundary: !Ref DeveloperPermissionsBoundary
          - Sid: VisualEditor1
            Effect: Allow
            Action:
            - iam:ListPolicies
            - iam:CreateInstanceProfile
            - iam:DeleteInstanceProfile
            - iam:GetInstanceProfile
            - iam:ListRoles
            - iam:ListUserPolicies
            - iam:ListInstanceProfiles
            - iam:ListInstanceProfilesForRole
            - iam:ListAttachedRolePolicies
            - iam:ListUsers
            - iam:ListAttachedGroupPolicies
            - iam:ListGroups
            - iam:ListRolePolicies
            - iam:CreateInstanceProfile
            - iam:AddRoleToInstanceProfile
            - iam:PassRole
            Resource: "*"
  DeveloperRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: DeveloperRole
      ManagedPolicyArns:
        - !Ref DeveloperRoleCustomPolicy
        - !Ref DeveloperRoleCustomPolicy2
      PermissionsBoundary: !Ref DeveloperPermissionsBoundary
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal: { "AWS": !Sub "arn:aws:iam::${AWS::AccountId}:root" }
          Action: "sts:AssumeRole"